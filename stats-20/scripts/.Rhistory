} else if (x[i] == TRUE) {
vec <- c(vec, yes[i])
} else {
vec <- c(vec, no[i])
}
}
}
my_ifelse(a)
my_ifelse(a, "yeehaw", "nohaw")
my_ifelse <- function(x, yes, no) {
yes <- rep(yes, length=length(x))
no <- rep(no, length=length(x))
vec <- vector()
for (i in 1:length(x)) {
if (is.na(x[i])) {
vec <- c(vec, NA)
} else if (x[i] == TRUE) {
vec <- c(vec, yes[i])
} else {
vec <- c(vec, no[i])
}
}
vec
}
my_ifelse(a, "yeehaw", "nohaw")
a
my_ifelse(d, "yeehaw", "nohaw")
d
c <- 1:5''
c <- 1:5
c[1 2 4]
c[1, 2, 2, 3, 1
]
c[c]
c[1:4]
c[c(1,1)]
c[c(1,1,3,2)]
?apply
parks_df <- data.frame("Name"=c("Leslie","Ron","April"),"Height"=c(62,71,66),
"Weight"=c(115,201,119),"Income"=c(4000,NA,2000))
parks_df
apply(parks_df, 2, mean)
as.matrix(parks_df)
?as.matrix
?matrix
?matrix
c <- as.factor(rep(1:5, times=2))
c
table(c)
as.vector(c)
?median
median(1:9)
parks_df
sapply(parks_df, mean)
?with
c
as.numeric(c)
levels(c)[as.numeric(c)]
swirl()
library(swirl)
swirl()
hist(trees$Girth)
hist(trees$Girth, breaks = 6, freq = FALSE)
hist(trees$Girth, breaks = 6, freq = FALSE, cex.lab=2)
hist(trees$Girth, breaks = 6, freq = FALSE, cex.lab=2, col=rainbow(8))
palette()
x <- rand(1:10)
rand()
random()
sample(1:10, 5)
x <- sample(1:10, 10)
x
boxplot(x)
boxplot(x, horizontal = TRUE)
knitr::opts_chunk$set(echo = TRUE)
births <- read.csv("births.csv")
births
births$Habit
is.na(births$Habit)
sum(is.na(births$Habit))
length(births$Habit)
table(births$Habit)
levels(births$Habit)
barplot(table(births$Habit))
barplot(table(births$Habit), color="pink")
barplot(table(births$Habit), col="blue")
barplot(table(births$Habit), col="red")
barplot(table(births$Habit), col="red", xlab = c("Unknown", "NonSmoker", "Smoker"))
barplot(table(births$Habit), col="red")
?droplevels
clean_habit <- droplevels(births$Habit, "")
clean_habit
length(clean_habit)
clean_habit <- droplevels(births$Habit, exclude="")
clean_habit
clean_habit <- droplevels(births$Habit)
length(clean_habit)
clean_habit <- droplevels(births$Habit, "")
length(clean_habit)
births$Habit
births$Habit[levels=c(1,2)]
births$Habit[levels=c("NonSmoker", "Smoker")]
table(births$Habit)
births$Habit[which(levels(births$Habit)) != ""]
births$Habit[which(levels(births$Habit) != "")]
births$Habit[which(births$Habit != "")]
clean_habit <- with(births, droplevels(Habit[which(Habit != "")]))
dim(clean_habit)
length(clean_habit)
unknown_habit <- with(births, Habit[which(Habit == "")])
unknown_habit
unknown_habit <- births[which(Habit == "")]
unknown_habit <- births[which(births$Habit == "")]
unknown_habit <- births[which(births$Habit == ""),]
unknown_habit
clean_habit <- droplevels(births[which(Habit != "")])
clean_habit <- droplevels(births[which(births$Habit != "")])
clean_habit <- droplevels(births[which(births$Habit != ""),])
clean_habt
clean_habit
levels(clean_habit$Habit)
clean_habit <- droplevels(births[which(births$Habit != ""),])
levels(clean_habit$Habit)
unknown_habit <- births[which(births$Habit == ""),]
levels(unknown_habit$Habit)
unknown_habit <- droplevels(births[which(births$Habit == ""),])
levels(unknown_habit$Habit)
boxplot(clean_habit$weight, clean_habit$Habit)
boxplot(clean_habit$Habit, clean_habit$weight)
boxplot(weight ~ Habit, data=clean_habit)
boxplot(weight ~ Habit, data=known_habit)
known_habit <- droplevels(births[which(births$Habit != ""),])
levels(known_habit$Habit)
known_habit <- droplevels(births[which(births$Habit != ""),])
levels(known_habit$Habit)
```{r}
boxplot(weight ~ Habit, data=known_habit)
hist(weight ~ Habit, data=known_habit, prob=TRUE)
hist(c(weight, Habit), data=known_habit, prob=TRUE)
hist(known_habit$weight[which(known_habit$Habit == "NonSmoker")], prob=TRUE)
births$weight
hist(known_habit$weight[which(known_habit$Habit == "NonSmoker")],
prob = TRUE,
main = "Histogram of Baby Weight by Mother's Smoking Habit",
xlab = "Weight (oz)",
col = "green",
density = 20)
hist(known_habit$weight[which(known_habit$Habit == "Smoker")],
prob = TRUE,
col = "red",
density = 20,
add = true)
hist(known_habit$weight[which(known_habit$Habit == "Smoker")],
prob = TRUE,
col = "red",
density = 20,
add = TRUE)
hist(known_habit$weight[which(known_habit$Habit == "NonSmoker")],
prob = TRUE,
main = "Histogram of Baby Weight by Mother's Smoking Habit",
xlab = "Weight (oz)",
col = "green",
density = 20)
hist(known_habit$weight[which(known_habit$Habit == "Smoker")],
prob = TRUE,
col = "red",
density = 20,
add = TRUE)
hist(known_habit$weight[which(known_habit$Habit == "NonSmoker")],
prob = TRUE,
main = "Histogram of Baby Weight by Mother's Smoking Habit",
xlab = "Weight (oz)",
col = "green",
density = 20)
hist(known_habit$weight[which(known_habit$Habit == "Smoker")],
prob = TRUE,
col = "red",
density = 20,
add = TRUE)
hist(known_habit$weight[which(known_habit$Habit == "NonSmoker")],
prob = TRUE,
main = "Histogram of Baby Weight by Mother's Smoking Habit",
xlab = "Weight (oz)",
col = "green",
density = 20)
hist(known_habit$weight[which(known_habit$Habit == "Smoker")],
prob = TRUE,
col = "red",
density = 20,
add = TRUE)
hist(known_habit$weight[which(known_habit$Habit == "NonSmoker")],
prob = TRUE,
main = "Histogram of Baby Weight by Mother's Smoking Habit",
xlab = "Weight (oz)",
col = "green",
density = 20,
xlim = range(known_habit$weight),
ylim = c(0, .03))
hist(known_habit$weight[which(known_habit$Habit == "Smoker")],
prob = TRUE,
col = "red",
density = 20,
add = TRUE)
hist(known_habit$weight[which(known_habit$Habit == "NonSmoker")],
prob = TRUE,
main = "Histogram of Baby Weight by Mother's Smoking Habit",
xlab = "Weight (oz)",
col = "green",
density = 20,
xlim = range(known_habit$weight),
ylim = c(0, .03))
hist(known_habit$weight[which(known_habit$Habit == "NonSmoker")],
prob = TRUE,
main = "Histogram of Baby Weight by Mother's Smoking Habit",
xlab = "Weight (oz)",
col = "green",
density = 20,
xlim = range(known_habit$weight),
ylim = c(0, .03))
hist(known_habit$weight[which(known_habit$Habit == "Smoker")],
prob = TRUE,
col = "red",
density = 20,
add = TRUE)
hist(non_weights,
prob = TRUE,
main = "Histogram of Baby Weight by Mother's Smoking Habit",
xlab = "Weight (oz)",
col = "green",
density = 20,
xlim = range(non_weights, smoke_weights),
ylim = c(0, .03))
non_weights <- known_habit$weight[which(known_habit$Habit == "NonSmoker")]
smoke_weights <- known_habit$weight[which(known_habit$Habit == "Smoker")]
hist(non_weights,
prob = TRUE,
main = "Histogram of Baby Weight by Mother's Smoking Habit",
xlab = "Weight (oz)",
col = "green",
density = 20,
xlim = range(c(non_weights, smoke_weights)),
ylim = c(0, .03))
non_weights <- known_habit$weight[which(known_habit$Habit == "NonSmoker")]
smoke_weights <- known_habit$weight[which(known_habit$Habit == "Smoker")]
hist(non_weights,
prob = TRUE,
main = "Histogram of Baby Weight by Mother's Smoking Habit",
xlab = "Weight (oz)",
col = "green",
density = 20,
xlim = range(c(non_weights, smoke_weights)),
ylim = c(0, .03))
hist(smoke_weights,
prob = TRUE,
col = "red",
density = 20,
add = TRUE)
abline(v = median(non_weights))
non_weights <- known_habit$weight[which(known_habit$Habit == "NonSmoker")]
smoke_weights <- known_habit$weight[which(known_habit$Habit == "Smoker")]
hist(non_weights,
prob = TRUE,
main = "Histogram of Baby Weight by Mother's Smoking Habit",
xlab = "Weight (oz)",
col = "green",
density = 20,
xlim = range(c(non_weights, smoke_weights)),
ylim = c(0, .03))
hist(smoke_weights,
prob = TRUE,
col = "red",
density = 20,
add = TRUE)
abline(v = median(non_weights))
abline(v = median(smoke_weights))
abline(v = median(non_weights), col = "green")
non_weights <- known_habit$weight[which(known_habit$Habit == "NonSmoker")]
smoke_weights <- known_habit$weight[which(known_habit$Habit == "Smoker")]
hist(non_weights,
prob = TRUE,
main = "Histogram of Baby Weight by Mother's Smoking Habit",
xlab = "Weight (oz)",
col = "green",
density = 20,
xlim = range(c(non_weights, smoke_weights)),
ylim = c(0, .03))
hist(smoke_weights,
prob = TRUE,
col = "red",
density = 20,
add = TRUE)
abline(v = median(non_weights), col = "green")
abline(v = median(smoke_weights), col = "red")
abline(v = median(non_weights), col = "green", lwd = 2)
hist(non_weights,
prob = TRUE,
main = "Histogram of Baby Weight by Mother's Smoking Habit",
xlab = "Weight (oz)",
col = "green",
density = 20,
xlim = range(c(non_weights, smoke_weights)),
ylim = c(0, .03))
hist(smoke_weights,
prob = TRUE,
col = "red",
density = 20,
add = TRUE)
abline(v = median(non_weights), col = "green", lwd = 2)
uninstall.packages("swirl")
library(swirl)
uninstall_all_courses(force = TRUE)
install_course_github(github_username =
"jakekramer", course_name = "stats20_19f_swirl")
swirl()
group <- c("control", "treatment", "control", "treatment", "treatment")
group <- factor(group)
levels(group)
levels(group) <- c(levels(group), "treatment2")
levels(group) <- c("control", "treatment", "treatment2")
levels(group) <- "treatment2"
levels(group)
levels(group)[3] <- "treatment2"
table(group)
group2 <- group[1:2]
nlevels(group2)
0
exit
swirl()
iris
View(iris)
head(iris)
head(iris, 5)
tail(iris, 5)
structure(iris)
str(iris)
nrow(iris)
ncol(iris)
summary(iris)
mode(iris)
iris <- as.list(iris)
as.list(iris)
is.vector(iris)
is.list(as.list(iris))
is.vector(as.list(iris))
colnames(iris)
colnames(trees)
trees
trees$Diameter <- trees$Girth
names(trees)
names(trees)[1] <- "Diameter"
names(trees)
transform(trees, log_volume = log(Volume))
transform(trees, log_volume =
| log(Volume),log_height = log(Height)
transform(trees, log_volume = log(Volume),log_height = log(Height)
)
trees
trees <- transform(trees, log_volume = Log(Volume))
trees <- transform(trees, log_volume = log(Volume))
data(stat_data)
stat_data
class(stat_data)
nrow(stat_data)
ncol(stat_data)
tapply(stat_data, 1, max)
apply(stat_data, 1, max)
apply(stat_data, 1, max.col)
?max.col
max.col(stat_data)
mean.col(stat_data)
apply(stat_data, 2, mean)
colMeans(stat_data)
rowMeans(stat_data)
as.data.frame(stat_data)
0
-
0
swirl(0)
str(L)
length(L)
4
summary(parks_df)
class(A)
apply(A, 2, sd)
lapply(parks_df, class)
lapply(L, class)
sapply(L, class)
vapply(L, class)
vapply(L, class, character(4))
vapply(L, class, character(1))
tapply(F1, levels(F1), mean)
tapply(pulse, levels(F1), mean)
tapply(pulse, F1, mean)
tapply(pulse, c(F1, F2), mean)
tapply(pulse, F2, mean)
tapply(pulse, F1*F2, mean)
info()
tapply(pulse, F1+F2, mean)
tapply(pulse, F2, mean)+tapply(pulse, F1, mean)
F1
F2
pulse
levels(pulse)
tapply(pulse, list(F1, F2), mean)
dir()
ls()
setwd(Desktop)
setwd(~Desktop)
setwd("~Desktop")
setwd("Desktop")
dir()
setwd("ucla/2019-20 Fall/stats 20")
getwd()
dir()
dir()[27]
scripts
dir()[27][1]
setwd("scripts")
dir()
setwd("/Users/zooeyn/Desktop/ucla/2019-20 Fall/Stats 20/scripts")
# Loading script data.
scripts <- read.csv(dir())
dir()
# Loading script data.
episodes <- dir()
episodes
setwd("/Users/zooeyn/Desktop/ucla/2019-20 Fall/Stats 20/scripts")
# Loading script data.
episodes <- dir()
episodes
setwd("/Users/zooeyn/Desktop/ucla/2019-20 Fall/Stats 20/scripts")
# Loading script data.
episodes <- dir()
episodes
read.csv(episodes[1])
read.csv(episodes[1], header = t)
read.csv(episodes[1], header = T)
setwd("/Users/zooeyn/Desktop/ucla/2019-20 Fall/Stats 20/scripts")
# Loading script data.
scripts <- data.frame()
for (file in dir()) {
episode <- read.csv(file)
scripts <- rbind(scripts, episode)
}
scripts
dim(scripts)
?dir
dir()
dir()[1]
setwd("/Users/zooeyn/Desktop/ucla/2019-20 Fall/Stats 20/scripts")
# Loading script data.
scripts <- data.frame()
for (file in dir()) {
episode <- read.csv(file)
scripts <- rbind(scripts, cbind(file, episode))
}
scripts
scripts
head(scripts)
setwd("/Users/zooeyn/Desktop/ucla/2019-20 Fall/Stats 20/scripts")
# Loading script data.
scripts <- data.frame()
for (file in dir()) {
episode <- read.csv(file, sep = "\t")
scripts <- rbind(scripts, cbind(file, episode))
}
head(scripts)
str(scripts)
setwd("/Users/zooeyn/Desktop/ucla/2019-20 Fall/Stats 20/scripts")
# Loading script data.
scripts <- data.frame()
for (file in dir()) {
episode <- read.csv(file)
scripts <- rbind(scripts, cbind(file, episode))
}
head(scripts)
str(scripts)
load("/Users/zooeyn/Desktop/ucla/2019-20 Fall/Stats 20/imdb.RData")
load(imdb.RData)
# Loading IMDB data.
setwd("/Users/zooeyn/Desktop/ucla/2019-20 Fall/Stats 20/")
load(imdb.RData)
load("imdb.RData")
imdb
mode(imdb)
class(imdb)
install.packages("rvest")
install.packages("rvest")
# Loading script data.
setwd("/Users/zooeyn/Desktop/ucla/2019-20 Fall/Stats 20/scripts")
scripts <- data.frame()
for (file in dir()) {
episode <- read.csv(file, stringsAsFactors = FALSE)
scripts <- rbind(scripts, cbind(file, episode))
}
# Loading IMDB data.
setwd("/Users/zooeyn/Desktop/ucla/2019-20 Fall/Stats 20/")
load("imdb.RData")
# Loading viewership data as demonstrated in the final guide.
library(rvest)
url <- "https://www.wikiwand.com/en/List_of_Parks_and_Recreation_episodes"
episode_data <- html_table(html_nodes(read_html(url), xpath = "//*/table"), fill = TRUE)
parks_and_rec <- Reduce("rbind", episode_data[2:8])
parks_and_rec$Title <- gsub(pattern = "[0-9a-zA-Z.,' ]", replacement = "", parks_and_rec$Title)
# Verify loadings.
ls()
names(scripts)
dim(scripts)
names(imdb)
dim(imdb)
names(parks_and_rec)
dim(parks_and_rec)
